# workerの設定
worker_processes auto;
worker_rlimit_nofile 150000;
events {
    worker_connections 65535;
		multi_accept on;
    use epoll;
}

http {
		log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$http_x_forwarded_for"
                "\treq:$request"
                "\tstatus:$status"
                "\tmethod:$request_method"
                "\turi:$request_uri"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tapptime:$upstream_response_time"
                "\tvhost:$host";

    access_log  /var/log/nginx/access.log  ltsv;
		# TODO:最後にアクセスログはOFFにする
		# access_log off;

		#基本設定
		sendfile    on;
	  tcp_nopush  on;
	  tcp_nodelay on;
	  types_hash_max_size 2048;
	  server_tokens    off;

		# Keepalive 設定
	  keepalive_timeout 65;
	  keepalive_requests 500;

		# 複数serverへproxyする設定
	  #upstream app {
	    #server 192.100.0.1:5000;
	    #server 192.100.0.2:5000;
	    #server 192.100.0.3:5000;
	    #keepalive 60;
	  #}
		#server {
			#location / {
	      #proxy_pass http://app;
	    #}
		#}

		server {
			# HTTP/2 (listen 443 の後ろに http2 ってつけるだけ。ブラウザからのリクエストの場合ssl必須）
	    listen 443 ssl http2;

	    # TLS の設定
	    listen 443 default ssl;
	    # server_name example.jp;  # オレオレ証明書だと指定しなくても動いた
	    ssl on;
	    ssl_certificate /ssl/oreore.crt;
	    ssl_certificate_key /ssl/oreore.key;
	    # SSL Sesssion Cache
	    ssl_session_cache shared:SSL:10m;
	    ssl_session_timeout 1m;  # cacheする時間。1mは1分。

			# reverse proxy の 設定
	    location / {
	      proxy_pass http://localhost:3000;
	      # proxy_http_version 1.1;          # app server との connection を keepalive するなら追加
	      # proxy_set_header Connection "";  # app server との connection を keepalive するなら追加
	    }

			# 静的コンテンツ
			location ~ .*\.(htm|html|css|js|jpg|png|gif|ico) {
	      expires 24h;
	      add_header Cache-Control public;

	      gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
	      gzip_types text/css application/javascript application/json application/font-woff application/font-tff image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
	      gzip_disable "msie6";
	      gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要
	      gzip_vary on;
	    }
		}
}
